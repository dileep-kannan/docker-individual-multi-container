{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ckdil\\\\Downloads\\\\multi-01-starting-setup\\\\multi-01-starting-setup\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GoalInput from './components/goals/GoalInput';\nimport CourseGoals from './components/goals/CourseGoals';\nimport ErrorAlert from './components/UI/ErrorAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loadedGoals, setLoadedGoals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(function () {\n    async function fetchData() {\n      setIsLoading(true);\n      try {\n        const response = await fetch('http://localhost/goals');\n        const resData = await response.json();\n        if (!response.ok) {\n          throw new Error(resData.message || 'Fetching the goals failed.');\n        }\n        setLoadedGoals(resData.goals);\n      } catch (err) {\n        setError(err.message || 'Fetching goals failed - the server responsed with an error.');\n      }\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n  async function addGoalHandler(goalText) {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost/goals', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: goalText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await response.json();\n      if (!response.ok) {\n        throw new Error(resData.message || 'Adding the goal failed.');\n      }\n      setLoadedGoals(prevGoals => {\n        const updatedGoals = [{\n          id: resData.goal.id,\n          text: goalText\n        }, ...prevGoals];\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(err.message || 'Adding a goal failed - the server responsed with an error.');\n    }\n    setIsLoading(false);\n  }\n  async function deleteGoalHandler(goalId) {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost/goals/' + goalId, {\n        method: 'DELETE'\n      });\n      const resData = await response.json();\n      if (!response.ok) {\n        throw new Error(resData.message || 'Deleting the goal failed.');\n      }\n      setLoadedGoals(prevGoals => {\n        const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(err.message || 'Deleting the goal failed - the server responsed with an error.');\n    }\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      errorText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GoalInput, {\n      onAddGoal: addGoalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(CourseGoals, {\n      goals: loadedGoals,\n      onDeleteGoal: deleteGoalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nM3JntU+Fc8hOoyIUYu56OxyGts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoalInput","CourseGoals","ErrorAlert","jsxDEV","_jsxDEV","App","_s","loadedGoals","setLoadedGoals","isLoading","setIsLoading","error","setError","fetchData","response","fetch","resData","json","ok","Error","message","goals","err","addGoalHandler","goalText","method","body","JSON","stringify","text","headers","prevGoals","updatedGoals","id","goal","deleteGoalHandler","goalId","filter","children","errorText","fileName","_jsxFileName","lineNumber","columnNumber","onAddGoal","onDeleteGoal","_c","$RefreshReg$"],"sources":["C:/Users/ckdil/Downloads/multi-01-starting-setup/multi-01-starting-setup/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport GoalInput from './components/goals/GoalInput';\nimport CourseGoals from './components/goals/CourseGoals';\nimport ErrorAlert from './components/UI/ErrorAlert';\n\nfunction App() {\n  const [loadedGoals, setLoadedGoals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(function () {\n    async function fetchData() {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost/goals');\n\n        const resData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(resData.message || 'Fetching the goals failed.');\n        }\n\n        setLoadedGoals(resData.goals);\n      } catch (err) {\n        setError(\n          err.message ||\n            'Fetching goals failed - the server responsed with an error.'\n        );\n      }\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  async function addGoalHandler(goalText) {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost/goals', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: goalText,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Adding the goal failed.');\n      }\n\n      setLoadedGoals((prevGoals) => {\n        const updatedGoals = [\n          {\n            id: resData.goal.id,\n            text: goalText,\n          },\n          ...prevGoals,\n        ];\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(\n        err.message ||\n          'Adding a goal failed - the server responsed with an error.'\n      );\n    }\n    setIsLoading(false);\n  }\n\n  async function deleteGoalHandler(goalId) {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost/goals/' + goalId, {\n        method: 'DELETE',\n      });\n\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Deleting the goal failed.');\n      }\n\n      setLoadedGoals((prevGoals) => {\n        const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(\n        err.message ||\n          'Deleting the goal failed - the server responsed with an error.'\n      );\n    }\n    setIsLoading(false);\n  }\n\n  return (\n    <div>\n      {error && <ErrorAlert errorText={error} />}\n      <GoalInput onAddGoal={addGoalHandler} />\n      {!isLoading && (\n        <CourseGoals goals={loadedGoals} onDeleteGoal={deleteGoalHandler} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}